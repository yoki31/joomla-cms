---
kind: pipeline
name: default

clone:

steps:
  - name: composer
    image: joomlaprojects/docker-images:php7.3
    volumes:
      - name: composer-cache
        path: /tmp/composer-cache
    commands:
      - composer validate --no-check-all --strict
      - composer install --no-progress --no-suggest
      - patch -N -p0 < tests/patch/phpunit8_php8_match.patch || echo "Ignore this error."

  - name: phpcs
    image: joomlaprojects/docker-images:php7.2
    depends_on: [ composer ]
    commands:
      - echo $(date)
      - ./libraries/vendor/bin/phpcs --extensions=php -p --standard=libraries/vendor/joomla/cms-coding-standards/lib/Joomla-CMS .
      - echo $(date)

  - name: npm
    image: node:14-alpine
    depends_on: [ phpcs ]
    commands:
      - npm ci --unsafe-perm

  - name: php72-unit
    depends_on: [ phpcs ]
    image: joomlaprojects/docker-images:php7.2
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Unit

  - name: php73-unit
    depends_on: [ phpcs ]
    image: joomlaprojects/docker-images:php7.3
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Unit

  - name: php74-unit
    depends_on: [ phpcs ]
    image: joomlaprojects/docker-images:php7.4
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Unit

  - name: php80-unit
    depends_on: [ phpcs ]
    image: joomlaprojects/docker-images:php8.0
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Unit

  - name: php81-unit
    depends_on: [ phpcs ]
    image: joomlaprojects/docker-images:php8.1
    failure: ignore
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Unit

  - name: php72-integration
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:php7.2
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Integration

  - name: php73-integration
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:php7.3
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Integration

  - name: php74-integration
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:php7.4
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Integration

  - name: php80-integration
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:php8.0
    failure: ignore
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Integration

  - name: php81-integration
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:php8.1
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Integration

  - name: php82-integration
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:php8.2
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Integration

  - name: php72-integration-pgsql
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:php7.2
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Integration --configuration phpunit-pgsql.xml.dist

  - name: php73-integration-pgsql
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:php7.3
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Integration --configuration phpunit-pgsql.xml.dist

  - name: php74-integration-pgsql
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:php7.4
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Integration --configuration phpunit-pgsql.xml.dist

  - name: php80-integration-pgsql
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:php8.0
    failure: ignore
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Integration --configuration phpunit-pgsql.xml.dist

  - name: php81-integration-pgsql
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:php8.1
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Integration --configuration phpunit-pgsql.xml.dist

  - name: php82-integration-pgsql
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:php8.2
    commands:
      - php -v
      - ./libraries/vendor/bin/phpunit --testsuite Integration --configuration phpunit-pgsql.xml.dist

  - name: scss-cs
    depends_on: [ npm ]
    image: node:current-alpine
    commands:
      - npm run lint:css

  - name: javascript-cs
    depends_on: [ npm ]
    image: node:current-alpine
    commands:
      - npm run lint:js

  - name: phpmin-api-mysql
    depends_on:
      - javascript-cs
    image: joomlaprojects/docker-images:systemtests
    environment:
      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
    commands:
      - bash tests/Codeception/drone-api-run.sh "$(pwd)" mysql

  - name: phpmax-api-mysql
    depends_on:
      - phpmin-api-mysql
    image: joomlaprojects/docker-images:systemtests8.1
    failure: ignore
    environment:
      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
    commands:
      - bash tests/Codeception/drone-api-run.sh "$(pwd)" mysql

#  - name: phpnext-api-mysql
#    depends_on:
#      - phpmin-api-mysql
#    image: joomlaprojects/docker-images:systemtests8.2
#    failure: ignore
#    environment:
#      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
#    commands:
#      - bash tests/Codeception/drone-api-run.sh "$(pwd)" mysqlphpnext

  - name: phpmin-api-postgres
    depends_on:
 #     - phpnext-api-mysql
      - phpmin-api-mysql
    image: joomlaprojects/docker-images:systemtests
    failure: ignore
    environment:
      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
    commands:
      - bash tests/Codeception/drone-api-run.sh "$(pwd)" postgres

#  - name: phpnext-api-postgres
#    depends_on:
#      - phpmin-api-postgres
#    image: joomlaprojects/docker-images:systemtests8.2
#    failure: ignore
#    environment:
#      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
#    commands:
#      - bash tests/Codeception/drone-api-run.sh "$(pwd)" postgresphpnext

  - name: phpmax-api-postgres
    depends_on:
#      - phpnext-api-postgres
      - phpmin-api-postgres
    image: joomlaprojects/docker-images:systemtests8.1
    failure: ignore
    environment:
      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
    commands:
      - bash tests/Codeception/drone-api-run.sh "$(pwd)" postgres

  - name: phpmin-system-mysql
    depends_on:
      - javascript-cs
      - phpmax-api-postgres
    image: joomlaprojects/docker-images:systemtests
    failure: ignore
    environment:
      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
    commands:
      - bash tests/Codeception/drone-system-run.sh "$(pwd)" mysql

#  - name: phpnext-system-mysql
#    depends_on:
#      - phpmin-system-mysql
#    image: joomlaprojects/docker-images:systemtests8.2
#    failure: ignore
#    environment:
#      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
#    commands:
#      - bash tests/Codeception/drone-system-run.sh "$(pwd)" mysqlphpnext

  - name: phpmax-system-mysql
    depends_on:
#      - phpnext-system-mysql
      - phpmin-system-mysql
    image: joomlaprojects/docker-images:systemtests8.1
    failure: ignore
    environment:
      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
    commands:
      - bash tests/Codeception/drone-system-run.sh "$(pwd)" mysqlphpmax

#  - name: phpnext-system-mysql8
#    depends_on:
#      - phpmax-system-mysql
#    image: joomlaprojects/docker-images:systemtests8.2
#    failure: ignore
#    environment:
#      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
#    commands:
#      - bash tests/Codeception/drone-system-run.sh "$(pwd)" mysql8phpnext

  - name: phpmax-system-mysql8
    depends_on:
#      - phpnext-system-mysql
      - phpmax-system-mysql
    image: joomlaprojects/docker-images:systemtests8.1
    failure: ignore
    environment:
      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
    commands:
      - bash tests/Codeception/drone-system-run.sh "$(pwd)" mysql8phpmax

#  - name: phpnext-system-postgres
#    depends_on:
#      - phpmax-system-mysql8
#    image: joomlaprojects/docker-images:systemtests8.2
#    failure: ignore
#    environment:
#      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
#    commands:
#      - bash tests/Codeception/drone-system-run.sh "$(pwd)" postgresphpnext

  - name: phpmax-system-postgres
    depends_on:
#      - phpnext-system-mysql8
      - phpmax-system-mysql8
    image: joomlaprojects/docker-images:systemtests8.1
    failure: ignore
    environment:
      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
    commands:
      - bash tests/Codeception/drone-system-run.sh "$(pwd)" postgresphpmax

  - name: phpmin-system-mysql8
    depends_on: [ phpmax-system-postgres ]
    image: joomlaprojects/docker-images:systemtests
    environment:
      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
    commands:
      - bash tests/Codeception/drone-system-run.sh "$(pwd)" mysql8

  - name: phpmin-system-postgres
    depends_on: [ phpmin-system-mysql8 ]
    image: joomlaprojects/docker-images:systemtests
    environment:
      JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK: 1
    commands:
      - bash tests/Codeception/drone-system-run.sh "$(pwd)" postgres

  - name: artifacts-system-tests
    image: cschlosser/drone-ftps
    depends_on:
#      - phpnext-system-mysql
#      - phpnext-system-mysql8
#      - phpnext-system-postgres
      - phpmax-system-mysql
      - phpmax-system-mysql8
      - phpmax-system-postgres
      - phpmin-system-mysql
      - phpmin-system-mysql8
      - phpmin-system-postgres
#      - phpnext-api-mysql
#      - phpnext-api-postgres
      - phpmax-api-mysql
      - phpmax-api-postgres
      - phpmin-api-mysql
      - phpmin-api-postgres
    environment:
      FTP_USERNAME:
        from_secret: ftpusername
      FTP_PASSWORD:
        from_secret: ftppassword
      PLUGIN_HOSTNAME: ci.joomla.org:21
      PLUGIN_SRC_DIR: /tests/Codeception/_output/
      PLUGIN_DEST_DIR: /artifacts
      PLUGIN_SECURE: false
      PLUGIN_EXCLUDE: ^\.git/$
    commands:
      - export PLUGIN_DEST_DIR=$PLUGIN_DEST_DIR/$DRONE_REPO/$DRONE_BRANCH/$DRONE_PULL_REQUEST/system-tests/$DRONE_BUILD_NUMBER
      - echo https://ci.joomla.org$PLUGIN_DEST_DIR
      - /bin/upload.sh
    when:
      status:
        - failure

branches:
  exclude: [ l10n_* ]

volumes:
  - name: composer-cache
    host:
      path: /tmp/composer-cache

services:
  - name: mysql
    image: mysql:5.7
    environment:
      MYSQL_USER: joomla_ut
      MYSQL_PASSWORD: joomla_ut
      MYSQL_ROOT_PASSWORD: joomla_ut
      MYSQL_DATABASE: test_joomla

  - name: mysql8
    image: mysql:8
    command: ["--default-authentication-plugin=mysql_native_password"]
    environment:
      MYSQL_USER: joomla_ut
      MYSQL_PASSWORD: joomla_ut
      MYSQL_ROOT_PASSWORD: joomla_ut
      MYSQL_DATABASE: test_joomla

  - name: postgres
    image: postgres:11-alpine
    ports:
      - 5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: joomla_ut
      POSTGRES_DB: test_joomla

---
kind: pipeline
name: package

steps:
  - name: packager
    image: joomlaprojects/docker-images:packager
    environment:
      FTP_USERNAME:
        from_secret: ftpusername
      FTP_PASSWORD:
        from_secret: ftppassword
      FTP_HOSTNAME: ci.joomla.org
      FTP_PORT: "21"
      FTP_DEST_DIR: /artifacts
      FTP_VERIFY: "false"
      FTP_SECURE: "true"
      HTTP_ROOT: "https://ci.joomla.org/artifacts"
      DRONE_PULL_REQUEST: DRONE_PULL_REQUEST
      DRONE_COMMIT: DRONE_COMMIT
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - if [ $DRONE_REPO_NAME != 'joomla-cms' ]; then echo "The packager only runs on the joomla/joomla-cms repo"; exit 0; fi
      - /bin/drone_build.sh
    volumes:
      - name: reference
        path: /reference
    when:
      branch:
        - 4.0-dev


---
kind: signature
hmac: e9588fbac0fd690d3f7fd11ac993d4a56379912cc9166aa55bada2919c217e01

...
